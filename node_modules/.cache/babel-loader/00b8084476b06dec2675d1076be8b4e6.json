{"ast":null,"code":"import { GET_TYPES, GET_ALL_POKEMONS, GET_POKEMON_BY_ID, GET_POKEMON_BY_NAME, CLEAR, FILTER_ORDER, MEMORY, ALL_ID, ALL_NAMES } from \"../actions/typesActions\";\nimport { FilterOrder } from \"../actions/filterHelpers\";\nconst initialState = {\n  allTypes: [],\n  allPokemons: [],\n  pokemonDetail: {},\n  pokemonCard: {},\n  allPokemonsCopy: [],\n  allPokemonsName: [],\n  allPokemonsId: [],\n  memory: false\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    case ALL_ID:\n      return {\n        ...state,\n        allPokemonsId: action.payload\n      };\n    case ALL_NAMES:\n      return {\n        ...state,\n        allPokemonsName: action.payload\n      };\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload,\n        allPokemonsCopy: action.payload\n      };\n    case GET_POKEMON_BY_ID:\n      return {\n        ...state,\n        pokemonDetail: action.payload\n      };\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemonCard: action.payload\n      };\n    case CLEAR:\n      return {\n        ...state,\n        [action.payload]: {}\n      };\n    case MEMORY:\n      return {\n        ...state,\n        memory: action.payload\n      };\n    case FILTER_ORDER:\n      const newP = FilterOrder(state.allPokemonsCopy, action.payload);\n      //console.log(state.allPokemons)\n      return {\n        ...state,\n        allPokemons: newP\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_TYPES","GET_ALL_POKEMONS","GET_POKEMON_BY_ID","GET_POKEMON_BY_NAME","CLEAR","FILTER_ORDER","MEMORY","ALL_ID","ALL_NAMES","FilterOrder","initialState","allTypes","allPokemons","pokemonDetail","pokemonCard","allPokemonsCopy","allPokemonsName","allPokemonsId","memory","rootReducer","state","action","type","payload","newP"],"sources":["C:/Users/User/Desktop/deploy/pokemon-app-main/client/src/redux/reducer/index.js"],"sourcesContent":["import {  GET_TYPES,\n     GET_ALL_POKEMONS,\n     GET_POKEMON_BY_ID,\n     GET_POKEMON_BY_NAME,\n     CLEAR ,\n    FILTER_ORDER,\n    MEMORY,\n    ALL_ID,\n    ALL_NAMES\n     } from \"../actions/typesActions\";\nimport { FilterOrder } from \"../actions/filterHelpers\";\nconst initialState={ allTypes:[], \n    allPokemons:[] ,\n    pokemonDetail:{},\n    pokemonCard:{},\n    allPokemonsCopy:[],\n    allPokemonsName:[],\n    allPokemonsId:[],\n    memory:false}\n\nfunction rootReducer(state=initialState , action){\n    switch(action.type){\n        case GET_TYPES:\n            return{...state,\n                allTypes:action.payload\n            }\n        case ALL_ID:\n            return{...state,\n                allPokemonsId:action.payload\n            }\n        case ALL_NAMES:\n            return{...state,\n                allPokemonsName:action.payload\n            }\n        case GET_ALL_POKEMONS:\n            return{...state,\n                allPokemons:action.payload,\n                allPokemonsCopy:action.payload\n            }\n        case GET_POKEMON_BY_ID:\n            return{...state,\n                pokemonDetail:action.payload\n            }\n        case GET_POKEMON_BY_NAME:\n            return{...state,\n                pokemonCard:action.payload\n            }\n        case CLEAR:\n            return {...state,\n                [action.payload]:{}\n            }\n        case MEMORY:\n            return{...state,\n                memory:action.payload\n            }    \n        case FILTER_ORDER:\n            const newP=FilterOrder(state.allPokemonsCopy,action.payload)\n            //console.log(state.allPokemons)\n            return{...state,\n                allPokemons:newP\n                \n            }\n       \n         \n        default: return state\n    }\n}\nexport default rootReducer;"],"mappings":"AAAA,SAAUA,SAAS,EACdC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,KAAK,EACNC,YAAY,EACZC,MAAM,EACNC,MAAM,EACNC,SAAS,QACD,yBAAyB;AACrC,SAASC,WAAW,QAAQ,0BAA0B;AACtD,MAAMC,YAAY,GAAC;EAAEC,QAAQ,EAAC,EAAE;EAC5BC,WAAW,EAAC,EAAE;EACdC,aAAa,EAAC,CAAC,CAAC;EAChBC,WAAW,EAAC,CAAC,CAAC;EACdC,eAAe,EAAC,EAAE;EAClBC,eAAe,EAAC,EAAE;EAClBC,aAAa,EAAC,EAAE;EAChBC,MAAM,EAAC;AAAK,CAAC;AAEjB,SAASC,WAAW,GAA6B;EAAA,IAA5BC,KAAK,uEAACV,YAAY;EAAA,IAAGW,MAAM;EAC5C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKtB,SAAS;MACV,OAAM;QAAC,GAAGoB,KAAK;QACXT,QAAQ,EAACU,MAAM,CAACE;MACpB,CAAC;IACL,KAAKhB,MAAM;MACP,OAAM;QAAC,GAAGa,KAAK;QACXH,aAAa,EAACI,MAAM,CAACE;MACzB,CAAC;IACL,KAAKf,SAAS;MACV,OAAM;QAAC,GAAGY,KAAK;QACXJ,eAAe,EAACK,MAAM,CAACE;MAC3B,CAAC;IACL,KAAKtB,gBAAgB;MACjB,OAAM;QAAC,GAAGmB,KAAK;QACXR,WAAW,EAACS,MAAM,CAACE,OAAO;QAC1BR,eAAe,EAACM,MAAM,CAACE;MAC3B,CAAC;IACL,KAAKrB,iBAAiB;MAClB,OAAM;QAAC,GAAGkB,KAAK;QACXP,aAAa,EAACQ,MAAM,CAACE;MACzB,CAAC;IACL,KAAKpB,mBAAmB;MACpB,OAAM;QAAC,GAAGiB,KAAK;QACXN,WAAW,EAACO,MAAM,CAACE;MACvB,CAAC;IACL,KAAKnB,KAAK;MACN,OAAO;QAAC,GAAGgB,KAAK;QACZ,CAACC,MAAM,CAACE,OAAO,GAAE,CAAC;MACtB,CAAC;IACL,KAAKjB,MAAM;MACP,OAAM;QAAC,GAAGc,KAAK;QACXF,MAAM,EAACG,MAAM,CAACE;MAClB,CAAC;IACL,KAAKlB,YAAY;MACb,MAAMmB,IAAI,GAACf,WAAW,CAACW,KAAK,CAACL,eAAe,EAACM,MAAM,CAACE,OAAO,CAAC;MAC5D;MACA,OAAM;QAAC,GAAGH,KAAK;QACXR,WAAW,EAACY;MAEhB,CAAC;IAGL;MAAS,OAAOJ,KAAK;EAAA;AAE7B;AACA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}